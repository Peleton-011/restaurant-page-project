@import url("./fonts.css");

/* To-Do: Fix resposiveness */

:root {
	--neon-color: hsl(317, 100%, 54%);
	--bg-color: hsl(321, 21%, 16%);
}

* {
	font-family: coolvetica;
	color: var(--neon-color);
	margin: 0px;
	font-size: 1.1rem;
}

.glowy-border {
	text-decoration: none;
	color: var(--neon-color);
	border: var(--neon-color) 0.125em solid;
	padding: 0.25em 1em;
	/* border-radius: 0.25em; */

	text-shadow: 0 0 0.125em var(--bg-color), 0 0 0.6em var(--neon-color);

	box-shadow: inset 0 0 0.5em 0 var(--neon-color),
		0 0 0.5em 0 var(--neon-color);

	position: relative;

	background: var(--bg-color);

	transition: all 100ms linear;
}

h1 {
	filter: url(#myFilter);
}

article > hgroup {
	padding: 2rem 0px;
}

article > hgroup > * {
	/* Make the text slightly italic */
	transform: skew(-13deg);
	-webkit-transform: skew(-13deg);
}

h2 {
	font-size: 3rem;
}

button.link {
	font-size: inherit;
	border: none;
	background: none;
	cursor: pointer;
}

span {
	font-size: inherit;
}

.jap-text {
	display: inline-block;
	/* Make the text slightly italic */
	font-weight: bold;
	transform: skew(-13deg);
	-webkit-transform: skew(-13deg);
}

.glowy-text,
.highlight {
	text-shadow: 0 0 0.125em var(--bg-color), 0 0 0.6em var(--neon-color);
}

.text-shadow {
	text-shadow: 0 0 0.6em #000;
}

.highlight {
	text-decoration: underline 2.5px;
	font-size: 1.5rem;
	filter: hue-rotate(-30deg);
}

.card {
	background-color: rgba(255, 255, 255, 0.75);
}

.img-card {
	margin: 2rem 0px;
	padding-left: 3rem;
}

.modal-list {
	z-index: 4;
	display: flex;
	flex-direction: column;
	align-items: center;
	background: none;
}

.modal-list > .modal-bg {
	/* visibility: hidden; */
	z-index: 1;
	position: absolute;
	height: 100vh;
	width: 100vw;
	perspective: 800px;
	overflow: hidden;
	background-image: linear-gradient(
		to top,
		#0f0209,
		#23061d,
		#330531,
		#3e024b,
		#41056a,
		#520578,
		#640385,
		#770092,
		#9b0089,
		#b8007e,
		#ce1173,
		#e03168
	);
}

.modal-bg > .crawly {
	background-size: 40px 40px;
	background-image: linear-gradient(
			to right,
			rgba(255, 255, 255, 0.2) 1px,
			transparent 1px
		),
		linear-gradient(
			to bottom,
			rgba(255, 255, 255, 0.2) 1px,
			transparent 1px
		);
	height: inherit;
	transform: rotateX(50deg);
	transform-origin: top center;
	animation: 5s linear infinite crawlingWall;
	background-position-y: top;
}

.modal-forward,
.modal-backward {
	z-index: 6;
}

@keyframes crawlingWall {
	to {
		background-position-y: bottom;
	}
}

.modal-card {
	z-index: 4;

	display: flex;
	flex-direction: row;
	/* justify-content: space-between; */
	max-height: 750px;
	justify-content: flex-start;

	margin: 3rem;
	width: fit-content;
	max-width: min(1000px, 75vw);

	column-gap: 2rem;
	padding: 1.5rem 3rem;
}

.modal-card.reverse {
	justify-content: flex-end;
	flex-direction: row-reverse;
}

.modal-card > img {
	height: max(20vh, 500px);
}

.modal-card > .modal-text {
	display: flex;
	flex-direction: column;
	text-align: right;
}

.modal-card.reverse > .modal-text {
	text-align: left;
}

.modal-card > img {
	height: max(20vh, 500px);
	max-width: 50%;

	object-fit: cover;
	object-position: center;
}

.modal-card {
	position: absolute;
	transition: transform 400ms ease;
}

.modal-card[data-status="unknown"] {
	transform: scale(0);
	transition: none;
}

.modal-card[data-status="active"] {
	transition-delay: 300ms;
}

.modal-card[data-status="after"] {
	transform: translateX(50%) scale(0);
}

.modal-card[data-status="before"] {
	transform: translateX(-50%) scale(0);
}

.modal-card[data-status="becoming-active-from-after"] {
	transform: translateX(50%) scale(0);
	transition: none;
}

.modal-card[data-status="becoming-active-from-before"] {
	transform: translateX(-50%) scale(0);
	transition: none;
}

body {
	min-height: 100vh;

	display: flex;
	flex-direction: column;

	background: var(--bg-color);
	margin-left: 0;
	margin-right: 0;
}

header {
	font-size: calc(25vh - 6rem);

	padding-left: 2rem;

	height: calc(25vh - 4rem);
	width: 100%;
}

nav {
	margin: 0;
	padding: 0;

	width: 100%;

	z-index: 10;

	display: flex;
	align-items: center;
	gap: 0;
}

nav > .active-nav-btn {
	border-bottom: none;
}

nav > button:first-of-type {
	padding-left: 10vw;
}

nav > button:last-of-type {
	text-align: left;
	border-right: none;
	width: 100%;
}

nav > button {
	display: inline-block;
	cursor: pointer;
	text-decoration: none;
	color: var(--neon-color);
	border: var(--neon-color) 0.125em solid;
	border-left: none;
	padding: 0.25em 1em;
	/* border-radius: 0.25em; */

	text-shadow: 0 0 0.125em var(--bg-color), 0 0 0.6em var(--neon-color);

	box-shadow: inset 0 0 0.5em 0 var(--neon-color),
		0 0 0.5em 0 var(--neon-color);

	position: relative;

	background: var(--bg-color);

	transition: all 100ms linear;
}

nav > butt-on::before {
	pointer-events: none;
	content: "";
	position: absolute;
	background: var(--neon-color);
	top: 120%;
	left: 0;
	width: 100%;
	height: 100%;

	transform: perspective(1em) rotateX(40deg) scale(1, 0.35);
	filter: blur(1em);
	opacity: 0.7;
}

nav > button::after {
	content: "";
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	box-shadow: 0 0 2em 0.5em var(--neon-color);
	opacity: 0;
	background-color: var(--neon-color);
	z-index: -1;
}

nav > button:hover,
nav > button:active {
	color: var(--bg-color);
	background-color: var(--neon-color);
	text-shadow: none;
}

nav > button:hover::before,
nav > button:active::before {
	opacity: 1;
}
nav > button:hover::after,
nav > button:active::after {
	opacity: 1;
}

.sticky {
	position: fixed;
	margin: 0;
	top: 0;
	width: 100%;
}

/* Add some top padding to the page content to prevent sudden quick movement (as the navigation bar gets a new position at the top of the page (position:fixed and top:0) */
.sticky + main {
	padding-top: 60px;
}

main {
	min-height: 100%;
	width: 100%;

	z-index: 4;
	position: relative;

	display: flex;
	flex-direction: column;
	align-items: center;
}

.container {
	padding: 1em 0px;
}

.bg-img {
	min-height: 50vh;
	width: 100vw;
	background-size: cover;
	background-position: center;

	font-size: 1.25rem;

	border-bottom: var(--neon-color) 0.125em solid;

	box-shadow: inset 0 -0.25em 0.5em -0.25em var(--neon-color),
		0 0 0.5em 0 var(--neon-color);
	transition: all 100ms linear;
}

text {
	font-size: 8rem;
	position: relative;
	bottom: 0;
	left: 1rem;
	transform: translate(2rem, 7rem);
}

#tvBarOverlay {
	animation: 10s tvBarAnimation infinite forwards;
}

@keyframes tvBarAnimation {
	from {
		background-position: 0% 0%;
	}

	to {
		background-position: 0% -100%;
	}
}
